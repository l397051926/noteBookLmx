---- 从头开始，复习一遍
第一章 对象导论
    面向对象设计（OOP）
    1.1 抽象过程
        基于汇编语言的基础，我们产生了多种语言，但是我们的行为都是按照机器来制作的，而并不适用现实的事件，那么我们就需要让现实和机器联合起来，抽象出一些东西，让他们满足一些特性和行为，则就是对象的做法
        smalltalk的五种基本特性
            1. 万物皆为对象
            2. 程序是对象的集合，他们通过发送消息来告知彼此要做的事情
            3. 每个对象都有自己的由其他对象所构成的存储
            4. 每个对象都拥有其类型
            5. 某一特定类型的所有对象都可以接收同样的消息
    1.2 每个对象都有一个接口
    1.3 每个对象都提供服务
    1.4 被隐藏的具体实现
        private proteated public
    1.5 复用具体实现
        每个类可能存在多个类，这些类是通过相互组合的方式实现方法，这些已有的类组合成新的类就是组合的方式，如果是动态的组合 就是聚合的方式，比如汽车拥有发动机
    1.6 继承
        我们拥有一个已有的类，但是不想再这个类上修改，我们可以选择创建一个类，来复制他，然后再这个新类增添内容，就是继承，继承的子类可以覆盖父类的方法，这样使用时就可以使用子类的新方法
        1.6.1 是一个 与 像是一个的关系
            是一个 就是 子类继承父类后，不会在增加多余的方法，只会覆盖父类的方法，保证还都是一类生物
            像是一个 则是 子类继承父类后，在此救赎又增加了自己的独有的方法，这样就是像是一类生物，但是里面是不同的
    1.7 伴随多态的可互换类型
        我们可以用一个父类，比如几何图形，让下面具体的图形继承这个父类，当我们要用几何绘制图形时，可以用父类来调用方法，而当我们使用时，就用具体的实现来构建，也就是在执行时，才知道将用哪个图形绘制，就是多态。
    1.8 单根继承结构
        所有的类都拥有唯一的父类就是Object的类，也是由C传播过来导致的，单根的好处首先是保证了整个类逻辑准群，其次为垃圾回收提供良好的简便性
    1.9 容器
        容器 也就是集合，用于存储一类的对象的集合，java自身就提供了很多容器
        1.9.1 参数化类型
            参数化类型也就是泛型，在java5 之前是没用泛型的，所以统一会传Object 作为容器的对象，但是当具体使用时就涉及到了类型转换，而后期推出了泛型，也就是可以指定一个对象的容器
    1.10 对象的创建和生命期
        我们每当使用一个对象要关心他的创建和销毁，因为对象不可能长时间存在，否则会对内存有很大的压力，那么他什么时候销毁呢，如果放在战中，计算机知道什么时候销毁，但是无法确定他所占用的大小，操作很麻烦，而放在堆中则可以
        不用管他的空间大小，使用多少就可以扩容，但是不知道什么时候不被使用了，java推出了垃圾回收机制， 定期的扫描堆中的对象，如果发现可以回收了，就可以动态的回收
    1.11 异常处理：处理错误
        大部分语言都没法子提供很强的异常容错率，遇到问题都交给开发者来解决异常，java也是，java唯一提供的是在编译时如果语法不规则，编译就不会通过，但是太复杂的时候也不会查出来
    1.12 并发编程
    1.13 java与Internet
        1.13.1 web是什么
        1.13.2 客户端编程
            插件、脚本、java、C#、javaScript...
        1.13.3 服务器端编程

第二章 一切都是对象
    2.1 用引用操作对象
    2.2 必须由你创建所有对象
        使用 new 来创建所有对象
        2.2.1 存储到什么地方
            1. 寄存器 速度很快，但是空间太小了
            2. 堆栈 空间限制无法任意搞
            3. 堆中 空间合适
            4. 常量存储
            5. 非RAM存储
        2.2.2 特例：基本类型
            创建对象都是用new来创建，而基本类型过于小，用new创建太浪费，因此是以值的形式，直接存储在堆中。
            java的基本类型
            --------------------------------------------
            基本类型 大小 最小值 最大值 包装类型
            boolean - - - Boolean
            char 16bit Unicode0 Unicode2^16-1 CharaCter
            byte 8bit -128 127 Byte
            short 16bit -2^15-1 2^15-1 Short
            int 32bit -2^31-1 2^31-1 Integer
            long 64bit -2^63-1 2^63-1 Long
            float 32bit IEEE754 IEEE754 Float
            double 64bit IEEE754 IEEE754 Double
            void - - - Void
            --------------------------------------------
            高精度数据  bigInteger(整数) bigDecimal（浮点数）
        2.2.3 java的数组
    2.3 永远不要销毁对象
        2.3.1 作用域
        2.3.2 对象作用域
    2.4 创建新的数据类型 类 class
        2.4.1 字段和方法
            基本成员的默认值
                类型 默认值
                boolean false
                char '\u0000'
                byte 0
                short 0
                int 0
                long 0L
                float 0.0f
                double 0.0d
    2.5 方法参数和返回值
        2.5.1 参数列表
    2.6 构建一个java程序
        2.6.1 名字可见性
            引入了package 来保证名字的唯一性
        2.6.2 运用其他构建
            import 关键字，导入指定要的包
        2.6.3 static 关键字
            独属于一个空间，可以直接通过类名调用，一个改变全局都改变
    2.7 你的第一个java程序
    2.8 注释和嵌入式文档
        2.8.1 代码注释
        2.8.2 语法
        2.8.3 嵌入式HTML
        2.8.4 一些标签类型
            @see 引用其他类
            @link 引用其他类 展示不同
            @version 版本
            @author 作者
            @since 最早版本
            @param 参数说明
            @return 返回值描述
            @throws 异常
            @deprecated 就特性被新特性取代
    2.9 编码风格
    2.10 总结

第三章 操作符
    3.1 更简单的打印语句
    3.2 使用java操作符
    3.3 优先级
    3.4 赋值语句 =
        把右边的值 赋给 左边
    3.5 算数运算符
        3.5.1 一元 加 和一元 减
    3.6 自动递增和递减
        前缀式 和后缀式， 前缀式就是在表达式或者变量的前面， 后缀式就是变量或表达式的后面
    3.7 关系操作符
        > < >= <= == !=
        3.7.1 测试对象的等价性
    3.8 逻辑操作符
        && || ！
        3.8.1 短路
    3.9 直接常量
        十六进制 前0X
    3.10 换位操作符  & | ！
    3.11 移位操作符 <<  >>
    3.12 三元操作符 if-else  boolean ? x : y
    3.13 字符串 + += 的区别
    3.14 使用操作符 常犯的错误
    3.15 类型转换操作符  cast
        3.15.1 截尾 和舍入
        3.15.2 提升
    3.16 java没有sizeof
    3.17 操作符小结

第四章 控制执行流程
    4.1 true 和false
    4.2 if- else
    4.3 迭代 while (do while) for
        4.3.3 逗号的作用
    4.4 foreach 的写法
    4.5 return
    4.6 break continue
    4.7 臭名昭著的goto
        java 没有实现 goto ，而是用标签的方法来代替这种 跳来跳去的 流程
    4.8 switch case default




